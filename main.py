import os
import shutil
import uuid

from fastapi import FastAPI, UploadFile
from fastapi.responses import RedirectResponse
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware

from openai import OpenAI
from dotenv import load_dotenv
import whisper

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
load_dotenv()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI
app = FastAPI()

# CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–∞–ø–∫–∏ static
if not os.path.exists("static"):
    os.makedirs("static")

app.mount("/static", StaticFiles(directory="static"), name="static")

# OpenRouter API –∫–ª–∏–µ–Ω—Ç —á–µ—Ä–µ–∑ OpenAI —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
client = OpenAI(
    api_key=os.getenv("OPENROUTER_API_KEY"),
    base_url="https://openrouter.ai/api/v1",
    default_headers={
        "HTTP-Referer": "http://localhost:8000/",  # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è OpenRouter
        "X-Title": "SuhbatAI"
    },
)

# –ó–∞–≥—Ä—É–∑–∫–∞ Whisper –º–æ–¥–µ–ª–∏
model = whisper.load_model("base")

# üåê –†–µ–¥–∏—Ä–µ–∫—Ç —Å / –Ω–∞ index.html
@app.get("/")
async def redirect_to_index():
    return RedirectResponse(url="/static/index.html")

# üîä –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–≤—å—é
@app.post("/interview")
async def interview(audio: UploadFile):
    file_id = str(uuid.uuid4())
    temp_path = f"static/{file_id}.mp3"

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—É–¥–∏–æ
    with open(temp_path, "wb") as f:
        shutil.copyfileobj(audio.file, f)

    # –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏
    result = model.transcribe(temp_path)
    prompt = result["text"]

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Claude —á–µ—Ä–µ–∑ OpenRouter
    response = client.chat.completions.create(
        model="anthropic/claude-sonnet-4",
        messages=[
            {"role": "system", "content": "You are a helpful interviewer."},
            {"role": "user", "content": prompt}
        ],
        max_tokens=1000
    )

    # –û—á–∏—Å—Ç–∫–∞
    os.remove(temp_path)

    return {"response": response.choices[0].message.content}
